name: CI

env:
  pip-cache: .pip_cache
  poetry-cache: .poetry-cache

on:
  push:
  pull_request:
  workflow_dispatch:  # allow manual runs

jobs:
  build:
    name: Build

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python: ["3.8"]  # expand this with more versions in the future

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Retrieve project cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.poetry-cache }}
            ${{ env.pip-cache }}
          key: ${{ matrix.os }}-build-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ matrix.os }}-build-
            ${{ matrix.os }}-

      - name: Install system dependencies
        run: |
          python -m pip install --cache-dir ${{ env.pip-cache }} --upgrade pip poetry

      - name: Install project dependencies
        run: |
          poetry config cache-dir ${{ env.poetry-cache }}
          poetry install -v

      - name: Unit test (with coverage)
        run: |
          poetry run pytest --cov=imagesearch --cov-report=xml

      - name: Format check
        run: |
          poetry run black imagesearch tests --check

      - name: Lint
        run: |
          poetry run pylint imagesearch tests -E

      - name: Type check
        run: |
          poetry run mypy imagesearch tests

      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        env:
          OS: ${{ matrix.os }}
          PYTHON: ${{ matrix.python }}
        with:
          file: ./coverage.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: true

  # after all oses/pythons' tests have completed, deploy the project if necessary
  deploy:
    name: Deploy
    needs: build
    # only do this step if the ref is a tag whose name starts with "v", like "v1.2.3"
    # this is weak, and could lead to false positives.
    if: startswith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Retrieve project cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.poetry-cache }}
            ${{ env.pip-cache }}
          key: ${{ runner.os }}-build-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install system dependencies
        run: |
          python -m pip install --cache-dir ${{ env.pip-cache }} --upgrade pip poetry

      - name: Install project dependencies
        run: |
          poetry config cache-dir ${{ env.poetry-cache }}
          poetry install -v

      - name: Create GH release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release of 0.4.2
          # the above line is updated automatically with bumpversion. do not change it!
          draft: false
          prerelease: false

      - name: Publish to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build
